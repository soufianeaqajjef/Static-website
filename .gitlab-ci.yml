stages:
    - build image
    - test image 
    - release image
    - deploy review
    - stop review
    - deploy staging
    - test staging
    - deploy prod
    - test prod
  
.test_template: &job_test
    image: alpine
    only:
      - master
    script:
      - apk --no-cache add curl
      - curl "http://${DOMAINE}" | grep -q "Hello world!"
  
image: docker:latest
services:
  - name: docker:dind
    alias: docker
  
build:
  stage: build image

  script:
    - docker build -t staticweb .
    - docker save staticweb > staticweb.tar
  artifacts:
    paths:
      - staticweb.tar  
  
.test:
  stage: test image
  script:
    - docker load < staticweb.tar
    - docker run -d -p 80:8080 --name webapp staticweb
    - sleep 5
    - apk --no-cache add curl
    - curl "http://docker" | grep -q "DIMENSION"
  
release image:
  stage: release image
  script:
    - docker load < staticweb.tar
    - docker tag staticweb "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker tag staticweb "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"

deploy staging:
  stage: deploy staging
  environment:
    name: staging
    url: https://staticweb-staging.herokuapp.com
  only:
    - master
  script:
    - apk --no-cache add npm
    - npm install -g heroku
    - heroku container:login
    - heroku create staticweb-staging || echo "project already exist"
    - heroku container:push -a staticweb-staging web
    - heroku container:release -a staticweb-staging web

deploy prod:
  stage: deploy prod
  environment:
    name: prod
    url: https://staticweb.herokuapp.com 
  only:
    - master
  script:
    - apk --no-cache add npm
    - npm install -g heroku
    - heroku container:login
    - heroku create staticweb-prod || echo "project already exist"
    - heroku container:push -a staticweb-prod web
    - heroku container:release -a staticweb-prod web

deploy review:
  stage: deploy review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://staticweb-$CI_COMMIT_REF_NAME.herokuapp.com 
    on_stop: stop review
  only:
    - merge_requests
  script:
    - apk --no-cache add npm
    - npm install -g heroku
    - heroku container:login
    - heroku create staticweb-$CI_COMMIT_REF_NAME || echo "project already exist"
    - heroku container:push -a staticweb-$CI_COMMIT_REF_NAME web
    - heroku container:release -a staticweb-$CI_COMMIT_REF_NAME web    

stop review:
  stage: stop review
  variables: 
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only:
    - merge_requests
  when: manual
  script:
    - apk --no-cache add npm
    - npm install -g heroku
    - heroku container:login
    - heroku apps:destroy -a staticweb-$CI_COMMIT_REF_NAME  -c staticweb-$CI_COMMIT_REF_NAME 

.test staging:
  <<: *job_test
  stage: test staging
  variables:
    DOMAIN: staticweb-staging.herokuapp.com

.test prod:
  <<: *job_test
  stage: test prod 
  variables:
    DOMAIN: staticweb.herokuapp.com            
